; Query 0 -- Type: InitialValues, Instructions: 13804
; This file conforms to SMTLIBv2 and was generated by KLEE
(set-logic QF_AUFBV )
; Array declarations
; Constraints
; Constraints and QueryExpr
(assert
        true
)
(check-sat)
(exit)
;   OK -- Elapsed: 1.377809e-02s
;   Solvable: true

; Query 1 -- Type: InitialValues, Instructions: 13804
; This file conforms to SMTLIBv2 and was generated by KLEE
(set-option :produce-models true)
(set-logic QF_AUFBV )
; Array declarations
(declare-fun user_data () (Array (_ BitVec 32) (_ BitVec 8) ) )
; Constraints
; Constraints and QueryExpr
(assert
        (= 
           false
           (bvsle 
                  (_ bv0 32)
                  (concat 
                          (select 
                                  user_data
                                  (_ bv3 32)
                          )
                          (concat 
                                  (select 
                                          user_data
                                          (_ bv2 32)
                                  )
                                  (concat 
                                          (select 
                                                  user_data
                                                  (_ bv1 32)
                                          )
                                          (select 
                                                  user_data
                                                  (_ bv0 32)
                                          )
                                  )
                          )
                  )
           )
        )
)
(check-sat)
(get-value ( (select user_data (_ bv0 32) ) ) )
(get-value ( (select user_data (_ bv1 32) ) ) )
(get-value ( (select user_data (_ bv2 32) ) ) )
(get-value ( (select user_data (_ bv3 32) ) ) )
(exit)
;   OK -- Elapsed: 4.402122e-03s
;   Solvable: true
;     user_data = [255,255,255,255]

; Query 2 -- Type: InitialValues, Instructions: 13843
; This file conforms to SMTLIBv2 and was generated by KLEE
(set-option :produce-models true)
(set-logic QF_AUFBV )
; Array declarations
(declare-fun user_data () (Array (_ BitVec 32) (_ BitVec 8) ) )
; Constraints
; Constraints and QueryExpr
(assert
        (let
            (
             (?B1
                 (concat 
                         (select 
                                 user_data
                                 (_ bv3 32)
                         )
                         (concat 
                                 (select 
                                         user_data
                                         (_ bv2 32)
                                 )
                                 (concat 
                                         (select 
                                                 user_data
                                                 (_ bv1 32)
                                         )
                                         (select 
                                                 user_data
                                                 (_ bv0 32)
                                         )
                                 )
                         )
                 )
             )
            )
            (and 
                 (bvslt 
                        ?B1
                        (_ bv0 32)
                 )
                 (bvsle 
                        (_ bv0 32)
                        ?B1
                 )
            )
        )
)
(check-sat)
(get-value ( (select user_data (_ bv0 32) ) ) )
(get-value ( (select user_data (_ bv1 32) ) ) )
(get-value ( (select user_data (_ bv2 32) ) ) )
(get-value ( (select user_data (_ bv3 32) ) ) )
(exit)
;   OK -- Elapsed: 2.906846e-03s
;   Solvable: false

